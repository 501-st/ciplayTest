{"ast":null,"code":"var _jsxFileName = \"/home/daniil/github/ciplay/src/components/login.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport { Box, Button, Input, Title } from \"../ui\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst useValidation = (value, validations) => {\n  _s();\n\n  const [isEmpty, setEmpty] = useState(true);\n  const [minLegthError, setMinLengthError] = useState(false);\n  useEffect(() => {\n    for (const validation in validations) {\n      switch (validation) {\n        case \"minLength\":\n          value.length < validations[validation] ? setMinLengthError(true) : setMinLengthError(false);\n          break;\n\n        case \"isEmpty\":\n          value ? setEmpty(false) : setEmpty(true);\n          break;\n      }\n    }\n  }, [value]);\n  return {\n    isEmpty,\n    minLegthError\n  };\n};\n\n_s(useValidation, \"09+gDF3qgQYJt4jc9hAG2TrWct0=\");\n\nconst useInput = (initialValue, validations) => {\n  _s2();\n\n  const [value, setValue] = useState(initialValue);\n  const [isDirty, setDirty] = useState(false);\n  const valid = useValidation(value, validations);\n\n  const onChange = e => {\n    setValue(e.target.value);\n  };\n\n  const onBlur = e => {\n    setDirty(true);\n  };\n\n  return {\n    value,\n    onChange,\n    onBlur\n  };\n};\n\n_s2(useInput, \"ROXCByPZsuh/SPOaQe5dG6oyq/A=\", false, function () {\n  return [useValidation];\n});\n\nconst Login = () => {\n  _s3();\n\n  const email = useInput(\"\");\n  const password = useInput(\"\");\n  return /*#__PURE__*/_jsxDEV(Box, {\n    style: {\n      margin: \"auto auto\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: \"\\u0410\\u0432\\u0442\\u043E\\u0440\\u0438\\u0437\\u0430\\u0446\\u0438\\u044F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        onChange: e => email.onChange(e),\n        onBlur: e => email.onBlur(e),\n        value: email.value,\n        name: \"email\",\n        type: \"email\",\n        placeholder: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        onChange: e => password.onChange(e),\n        onBlur: e => password.onBlur(e),\n        value: password.value,\n        type: \"password\",\n        placeholder: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n\n_s3(Login, \"00Z0tan0DaOsOe3pLeP/51Sw9SI=\", false, function () {\n  return [useInput, useInput];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["Box","Button","Input","Title","useEffect","useState","useValidation","value","validations","isEmpty","setEmpty","minLegthError","setMinLengthError","validation","length","useInput","initialValue","setValue","isDirty","setDirty","valid","onChange","e","target","onBlur","Login","email","password","margin"],"sources":["/home/daniil/github/ciplay/src/components/login.js"],"sourcesContent":["import {Box, Button, Input, Title} from \"../ui\";\nimport {useEffect, useState} from \"react\";\n\nconst useValidation = (value, validations) => {\n    const [isEmpty, setEmpty] = useState(true)\n    const [minLegthError, setMinLengthError] = useState(false)\n\n    useEffect(() => {\n        for (const validation in validations) {\n            switch (validation) {\n                case \"minLength\":\n                    value.length < validations[validation] ? setMinLengthError(true) : setMinLengthError(false)\n                    break;\n                case \"isEmpty\":\n                    value ? setEmpty(false) : setEmpty(true)\n                    break;\n            }\n        }\n    }, [value])\n\n    return {isEmpty, minLegthError}\n}\n\nconst useInput = (initialValue, validations) => {\n    const [value, setValue] = useState(initialValue)\n    const [isDirty, setDirty] = useState(false)\n    const valid = useValidation(value, validations)\n\n    const onChange = (e) => {\n        setValue(e.target.value)\n    }\n\n    const onBlur = (e) => {\n        setDirty(true)\n    }\n\n    return {\n        value, onChange, onBlur\n    }\n}\n\nconst Login = () => {\n    const email = useInput(\"\")\n    const password = useInput(\"\")\n\n    return (\n        <Box style={{margin: \"auto auto\"}}>\n            <Title>\n                Авторизация\n            </Title>\n            <form>\n                <Input onChange={(e) => email.onChange(e)} onBlur={(e) => email.onBlur(e)} value={email.value}\n                       name=\"email\" type=\"email\" placeholder=\"Email\"/>\n                <Input onChange={(e) => password.onChange(e)} onBlur={(e) => password.onBlur(e)} value={password.value}\n                       type=\"password\" placeholder=\"Password\"/>\n                <Button type=\"submit\">\n                    Войти\n                </Button>\n            </form>\n        </Box>\n    )\n}\n\nexport default Login"],"mappings":";;;;;AAAA,SAAQA,GAAR,EAAaC,MAAb,EAAqBC,KAArB,EAA4BC,KAA5B,QAAwC,OAAxC;AACA,SAAQC,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;;;AAEA,MAAMC,aAAa,GAAG,CAACC,KAAD,EAAQC,WAAR,KAAwB;EAAA;;EAC1C,MAAM,CAACC,OAAD,EAAUC,QAAV,IAAsBL,QAAQ,CAAC,IAAD,CAApC;EACA,MAAM,CAACM,aAAD,EAAgBC,iBAAhB,IAAqCP,QAAQ,CAAC,KAAD,CAAnD;EAEAD,SAAS,CAAC,MAAM;IACZ,KAAK,MAAMS,UAAX,IAAyBL,WAAzB,EAAsC;MAClC,QAAQK,UAAR;QACI,KAAK,WAAL;UACIN,KAAK,CAACO,MAAN,GAAeN,WAAW,CAACK,UAAD,CAA1B,GAAyCD,iBAAiB,CAAC,IAAD,CAA1D,GAAmEA,iBAAiB,CAAC,KAAD,CAApF;UACA;;QACJ,KAAK,SAAL;UACIL,KAAK,GAAGG,QAAQ,CAAC,KAAD,CAAX,GAAqBA,QAAQ,CAAC,IAAD,CAAlC;UACA;MANR;IAQH;EACJ,CAXQ,EAWN,CAACH,KAAD,CAXM,CAAT;EAaA,OAAO;IAACE,OAAD;IAAUE;EAAV,CAAP;AACH,CAlBD;;GAAML,a;;AAoBN,MAAMS,QAAQ,GAAG,CAACC,YAAD,EAAeR,WAAf,KAA+B;EAAA;;EAC5C,MAAM,CAACD,KAAD,EAAQU,QAAR,IAAoBZ,QAAQ,CAACW,YAAD,CAAlC;EACA,MAAM,CAACE,OAAD,EAAUC,QAAV,IAAsBd,QAAQ,CAAC,KAAD,CAApC;EACA,MAAMe,KAAK,GAAGd,aAAa,CAACC,KAAD,EAAQC,WAAR,CAA3B;;EAEA,MAAMa,QAAQ,GAAIC,CAAD,IAAO;IACpBL,QAAQ,CAACK,CAAC,CAACC,MAAF,CAAShB,KAAV,CAAR;EACH,CAFD;;EAIA,MAAMiB,MAAM,GAAIF,CAAD,IAAO;IAClBH,QAAQ,CAAC,IAAD,CAAR;EACH,CAFD;;EAIA,OAAO;IACHZ,KADG;IACIc,QADJ;IACcG;EADd,CAAP;AAGH,CAhBD;;IAAMT,Q;UAGYT,a;;;AAelB,MAAMmB,KAAK,GAAG,MAAM;EAAA;;EAChB,MAAMC,KAAK,GAAGX,QAAQ,CAAC,EAAD,CAAtB;EACA,MAAMY,QAAQ,GAAGZ,QAAQ,CAAC,EAAD,CAAzB;EAEA,oBACI,QAAC,GAAD;IAAK,KAAK,EAAE;MAACa,MAAM,EAAE;IAAT,CAAZ;IAAA,wBACI,QAAC,KAAD;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAII;MAAA,wBACI,QAAC,KAAD;QAAO,QAAQ,EAAGN,CAAD,IAAOI,KAAK,CAACL,QAAN,CAAeC,CAAf,CAAxB;QAA2C,MAAM,EAAGA,CAAD,IAAOI,KAAK,CAACF,MAAN,CAAaF,CAAb,CAA1D;QAA2E,KAAK,EAAEI,KAAK,CAACnB,KAAxF;QACO,IAAI,EAAC,OADZ;QACoB,IAAI,EAAC,OADzB;QACiC,WAAW,EAAC;MAD7C;QAAA;QAAA;QAAA;MAAA,QADJ,eAGI,QAAC,KAAD;QAAO,QAAQ,EAAGe,CAAD,IAAOK,QAAQ,CAACN,QAAT,CAAkBC,CAAlB,CAAxB;QAA8C,MAAM,EAAGA,CAAD,IAAOK,QAAQ,CAACH,MAAT,CAAgBF,CAAhB,CAA7D;QAAiF,KAAK,EAAEK,QAAQ,CAACpB,KAAjG;QACO,IAAI,EAAC,UADZ;QACuB,WAAW,EAAC;MADnC;QAAA;QAAA;QAAA;MAAA,QAHJ,eAKI,QAAC,MAAD;QAAQ,IAAI,EAAC,QAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QALJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAJJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAgBH,CApBD;;IAAMkB,K;UACYV,Q,EACGA,Q;;;KAFfU,K;AAsBN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}