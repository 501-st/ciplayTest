{"ast":null,"code":"let PasswordValidator = (pass, setPass) => {\n  if (pass.value === \"\") {\n    setPass({ ...pass,\n      error: \"Пароль обязателен к заполнению\"\n    });\n    return false;\n  } else if (!String(pass.value).match(/^(?=.*[A-Z]).{4,10}$/)) {\n    setPass({ ...pass,\n      error: \"В пароле должна быть как минимум 1 заглавная буква, от 4 до 10 символов\"\n    });\n    return false;\n  }\n\n  return true;\n};\n\n_c = PasswordValidator;\nexport default PasswordValidator;\n\nvar _c;\n\n$RefreshReg$(_c, \"PasswordValidator\");","map":{"version":3,"names":["PasswordValidator","pass","setPass","value","error","String","match"],"sources":["/home/daniil/github/ciplay/src/validators/password-validator.js"],"sourcesContent":["let PasswordValidator = (pass, setPass) => {\n    if (pass.value === \"\") {\n        setPass({...pass, error: \"Пароль обязателен к заполнению\"})\n        return false\n    } else if (!String(pass.value).match(\n        /^(?=.*[A-Z]).{4,10}$/\n    )) {\n        setPass({...pass, error: \"В пароле должна быть как минимум 1 заглавная буква, от 4 до 10 символов\"})\n        return false\n    }\n    return true\n}\n\nexport default PasswordValidator"],"mappings":"AAAA,IAAIA,iBAAiB,GAAG,CAACC,IAAD,EAAOC,OAAP,KAAmB;EACvC,IAAID,IAAI,CAACE,KAAL,KAAe,EAAnB,EAAuB;IACnBD,OAAO,CAAC,EAAC,GAAGD,IAAJ;MAAUG,KAAK,EAAE;IAAjB,CAAD,CAAP;IACA,OAAO,KAAP;EACH,CAHD,MAGO,IAAI,CAACC,MAAM,CAACJ,IAAI,CAACE,KAAN,CAAN,CAAmBG,KAAnB,CACR,sBADQ,CAAL,EAEJ;IACCJ,OAAO,CAAC,EAAC,GAAGD,IAAJ;MAAUG,KAAK,EAAE;IAAjB,CAAD,CAAP;IACA,OAAO,KAAP;EACH;;EACD,OAAO,IAAP;AACH,CAXD;;KAAIJ,iB;AAaJ,eAAeA,iBAAf"},"metadata":{},"sourceType":"module"}