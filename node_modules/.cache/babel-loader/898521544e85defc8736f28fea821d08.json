{"ast":null,"code":"let EmailValidator = (email, setEmail) => {\n  if (email.value === \"\") {\n    setEmail({ ...email,\n      error: \"Email обязателен к заполнению\"\n    });\n    return false;\n  } else if (!String(email.value).toLowerCase().match(/^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/)) {\n    setEmail({ ...email,\n      error: \"Некорректный email\"\n    });\n    return false;\n  }\n\n  return true;\n};\n\n_c = EmailValidator;\nexport default EmailValidator;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmailValidator\");","map":{"version":3,"names":["EmailValidator","email","setEmail","value","error","String","toLowerCase","match"],"sources":["/home/daniil/github/ciplay/src/validators/email-validator.js"],"sourcesContent":["let EmailValidator = (email, setEmail) => {\n    if (email.value === \"\") {\n        setEmail({...email, error: \"Email обязателен к заполнению\"})\n        return false\n    } else if (!String(email.value).toLowerCase().match(\n        /^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/\n    )) {\n        setEmail({...email, error: \"Некорректный email\"})\n        return false\n    }\n    return true\n}\n\nexport default EmailValidator"],"mappings":"AAAA,IAAIA,cAAc,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;EACtC,IAAID,KAAK,CAACE,KAAN,KAAgB,EAApB,EAAwB;IACpBD,QAAQ,CAAC,EAAC,GAAGD,KAAJ;MAAWG,KAAK,EAAE;IAAlB,CAAD,CAAR;IACA,OAAO,KAAP;EACH,CAHD,MAGO,IAAI,CAACC,MAAM,CAACJ,KAAK,CAACE,KAAP,CAAN,CAAoBG,WAApB,GAAkCC,KAAlC,CACR,iCADQ,CAAL,EAEJ;IACCL,QAAQ,CAAC,EAAC,GAAGD,KAAJ;MAAWG,KAAK,EAAE;IAAlB,CAAD,CAAR;IACA,OAAO,KAAP;EACH;;EACD,OAAO,IAAP;AACH,CAXD;;KAAIJ,c;AAaJ,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}