{"ast":null,"code":"var _jsxFileName = \"/home/daniil/github/ciplay/src/components/login.js\",\n    _s = $RefreshSig$();\n\nimport { Box, Button, Input, Title } from \"../ui\";\nimport { useEffect, useState } from \"react\";\n/*const useValidation = (value, validations) => {\n    const [isEmpty, setEmpty] = useState(true)\n    const [minLengthError, setMinLengthError] = useState(false)\n\n    useEffect(() => {\n        for (const validation in validations) {\n            switch (validation) {\n                case \"minLength\":\n                    value.length < validations[validation] ? setMinLengthError(true) : setMinLengthError(false)\n                    break;\n                case \"isEmpty\":\n                    value ? setEmpty(false) : setEmpty(true)\n                    break;\n                case \"default\":\n                    break;\n            }\n        }\n    }, [value])\n\n    return {isEmpty, minLengthError}\n}\n\nconst useInput = (initialValue, validations) => {\n    const [value, setValue] = useState(initialValue)\n    const [isDirty, setDirty] = useState(false)\n    const valid = useValidation(value, validations)\n\n    const onChange = (e) => {\n        setValue(e.target.value)\n    }\n\n    const onBlur = (e) => {\n        setDirty(true)\n    }\n\n    return {\n        value, onChange, onBlur, isDirty, ...valid\n    }\n}*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  /* const email = useInput(\"\", {isEmpty: true, minLength: 3})\n   const password = useInput(\"\", {isEmpty: true, minLength: 5})*/\n  const [email, setEmail] = useState({\n    value: \"\",\n    error: \"\"\n  });\n  const [pass, setPass] = useState({\n    value: \"\",\n    error: \"\"\n  });\n\n  const handleClick = () => {\n    if (email.value === \"\") {\n      setEmail({ ...email,\n        error: \"Email обязателен к заполнению\"\n      });\n      return false;\n    } else if (!String(email.value).toLowerCase().match(/^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/)) {\n      setEmail({ ...email,\n        error: \"Некорректный email\"\n      });\n      return false;\n    } else if (pass.value === \"\") {\n      setPass({ ...pass,\n        error: \"Пароль обязателен к заполнению\"\n      });\n      return false;\n    } else if (!String(pass.value).toLowerCase().match(/^(?=.*[A-Z]).{4,10}$/)) {\n      setPass({ ...pass,\n        error: \"Как минимум одна заглавная буква, от 4 до 10 символов\"\n      });\n      return false;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    style: {\n      margin: \"auto auto\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: \"\\u0410\\u0432\\u0442\\u043E\\u0440\\u0438\\u0437\\u0430\\u0446\\u0438\\u044F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      value: email.value,\n      onChange: e => setEmail({\n        error: \"\",\n        value: e.target.value\n      }),\n      name: \"email\",\n      type: \"email\",\n      placeholder: \"Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      value: pass.value,\n      onChange: e => setPass({\n        error: \"\",\n        value: e.target.value\n      }),\n      type: \"password\",\n      placeholder: \"Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), email.error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        bottom: 80,\n        left: 0,\n        right: 0,\n        color: \"red\"\n      },\n      children: email.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 29\n    }, this), pass.error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        bottom: 80,\n        left: 0,\n        right: 0,\n        color: \"red\"\n      },\n      children: pass.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleClick,\n      children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"ioQGw2tFWVG03ktQp9wtnaKTt38=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["Box","Button","Input","Title","useEffect","useState","Login","email","setEmail","value","error","pass","setPass","handleClick","String","toLowerCase","match","margin","e","target","position","bottom","left","right","color"],"sources":["/home/daniil/github/ciplay/src/components/login.js"],"sourcesContent":["import {Box, Button, Input, Title} from \"../ui\";\nimport {useEffect, useState} from \"react\";\n\n/*const useValidation = (value, validations) => {\n    const [isEmpty, setEmpty] = useState(true)\n    const [minLengthError, setMinLengthError] = useState(false)\n\n    useEffect(() => {\n        for (const validation in validations) {\n            switch (validation) {\n                case \"minLength\":\n                    value.length < validations[validation] ? setMinLengthError(true) : setMinLengthError(false)\n                    break;\n                case \"isEmpty\":\n                    value ? setEmpty(false) : setEmpty(true)\n                    break;\n                case \"default\":\n                    break;\n            }\n        }\n    }, [value])\n\n    return {isEmpty, minLengthError}\n}\n\nconst useInput = (initialValue, validations) => {\n    const [value, setValue] = useState(initialValue)\n    const [isDirty, setDirty] = useState(false)\n    const valid = useValidation(value, validations)\n\n    const onChange = (e) => {\n        setValue(e.target.value)\n    }\n\n    const onBlur = (e) => {\n        setDirty(true)\n    }\n\n    return {\n        value, onChange, onBlur, isDirty, ...valid\n    }\n}*/\n\nconst Login = () => {\n    /* const email = useInput(\"\", {isEmpty: true, minLength: 3})\n     const password = useInput(\"\", {isEmpty: true, minLength: 5})*/\n\n    const [email, setEmail] = useState({\n        value: \"\",\n        error: \"\"\n    })\n\n    const [pass, setPass] = useState({\n        value: \"\",\n        error: \"\"\n    })\n\n    const handleClick = () => {\n        if (email.value === \"\") {\n            setEmail({...email, error: \"Email обязателен к заполнению\"})\n            return false\n        } else if (!String(email.value).toLowerCase().match(\n            /^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$/\n        )) {\n            setEmail({...email, error: \"Некорректный email\"})\n            return false\n        } else if (pass.value === \"\") {\n            setPass({...pass, error: \"Пароль обязателен к заполнению\"})\n            return false\n        } else if (!String(pass.value).toLowerCase().match(\n            /^(?=.*[A-Z]).{4,10}$/\n        )) {\n            setPass({...pass, error: \"Как минимум одна заглавная буква, от 4 до 10 символов\"})\n            return false\n        }\n    }\n\n    return (\n        <Box style={{margin: \"auto auto\"}}>\n            <Title>\n                Авторизация\n            </Title>\n            {/*<form>\n                <Input onChange={(e) => email.onChange(e)} onBlur={(e) => email.onBlur(e)} value={email.value}\n                       name=\"email\" type=\"email\" placeholder=\"Email\"/>\n                {(email.isEmpty && email.isDirty) && <div style={{color: \"red\"}}>Поле не может быть пустым</div>}\n                {(email.isDirty && email.minLengthError) && <div style={{color: \"red\"}}>Некорректная длина</div>}\n                <Input onChange={(e) => password.onChange(e)} onBlur={(e) => password.onBlur(e)} value={password.value}\n                       type=\"password\" placeholder=\"Password\"/>\n                <Button type=\"submit\">\n                    Войти\n                </Button>\n            </form>*/}\n            <Input value={email.value} onChange={(e) => setEmail({error: \"\", value: e.target.value})} name=\"email\" type=\"email\"\n                   placeholder=\"Email\"/>\n            <Input value={pass.value} onChange={(e) => setPass({error: \"\", value: e.target.value})} type=\"password\" placeholder=\"Password\"/>\n            {email.error && <div style={{position: \"absolute\", bottom: 80, left: 0, right: 0, color: \"red\"}}>{email.error}</div>}\n            {pass.error && <div style={{position: \"absolute\", bottom: 80, left: 0, right: 0, color: \"red\"}}>{pass.error}</div>}\n            <Button onClick={handleClick}>\n                Войти\n            </Button>\n        </Box>\n    )\n}\n\nexport default Login;"],"mappings":"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"},"metadata":{},"sourceType":"module"}